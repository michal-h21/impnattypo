% \iffalse meta-comment
%
% Copyright (C) 2011 by Raphaël Pinson <raphink@gmail.com>
% ---------------------------------------------------------------------------
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Raphaël Pinson.
%
% This work consists of the files impnattypo.dtx and impnattypo.ins
% and the derived filebase impnattypo.sty.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{impnattypo.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<package>\ProvidesPackage{impnattypo}
%<*package>
    [2011/09/19 0.4 Recommendations typographiques de l'Imprimerie Nationale Française]
%</package>
%
%<*driver>
\documentclass{ltxdoc}
\usepackage[french]{babel}
\usepackage{fontspec}
\usepackage[svgnames]{xcolor}
\setmainfont{Linux Libertine O}
\usepackage{metalogo}
\usepackage[draft,hyphenation,nosingleletter,parindent,lastparline,homeoarchy]{impnattypo}[2011/09/19]
\usepackage[all]{nowidow}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{impnattypo.dtx}
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \CheckSum{96}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{0.5}{2011/09/19}{Add homeoarchy detection}
% \changes{0.4}{2011/09/15}{Add draft mode}
% \changes{0.3}{2011/09/13}{Add parindent and lastparline options}
% \changes{0.2}{2011/09/13}{Add nosingleletter option}
% \changes{0.1}{2011/09/11}{First version}
%
% \DoNotIndex{\newcommand,\newenvironment}
%
% \providecommand*{\url}{\texttt}
% \GetFileInfo{impnattypo.dtx}
% \title{Le paquet \textsf{impnattypo}}
% \author{Raphaël Pinson \\ \url{raphink@gmail.com}}
% \date{\fileversion~en date du \filedate}
%
% \maketitle
%
% \section{Introduction}
%
% En matière de typographie française,
% le \emph{Lexique des règles typographiques en usage à l'Imprimerie Nationale}
% est une référence incontournable.
%
% Si la majorité des recommendations de cet ouvrage est implémentée dans 
% le module \textsf{frenchb} pour \textsf{babel},
% certaines autres recommendations méritent encore d'être automatisées pour être
% implémentées en \LaTeX.
%
% C'est le but de ce paquet, initié par une question sur le site
% tex.stackexchange.com\footnote{\url{http://tex.stackexchange.com/questions/20493/french-typography-recommendations}},
% et qui implémente plusieurs règles
% édictées dans ce lexique afin de les rendre plus facilement applicables
% aux textes édités avec \LaTeX.
%
% \section{Utilisation}
%
% Pour utiliser le paquet \texttt{impnattypo}, entrez la ligne:
%
% \begin{verbatim}
%    \usepackage[<options>]{impnattypo}
% \end{verbatim}
%
% Les options du paquet sont décrites dans les sections suivantes.
%
% \subsection{Césures}
%
% \DescribeMacro{hyphenation}
% En dehors des règles générales de coupure des mots, le lexique indique
% qu'il faut \og [éviter] les coupures de mots sur plus de trois lignes
% consécutives \fg{}.
%
% En faisant un peu de zèle, l'implémentation proposée décourage fortement
% les césures en fin de page, ainsi que les césures sur deux lignes
% consécutives.
%
% Pour activer cette fonctionalité, utilisez l'option \texttt{hyphenation}:
%
% \begin{verbatim}
%    \usepackage[hyphenation]{impnattypo}
% \end{verbatim}
%
%
% \subsection{Formatage des paragraphes}
%
% \DescribeMacro{parindent}
% Le lexique conseille une indentation des paragraphes de 1em.
% Ce réglage de |\parindent| peut être obtenu par l'utilisation
% de l'option \texttt{parindent}:
%
% \begin{verbatim}
%    \usepackage[parindent]{impnattypo}
% \end{verbatim}
%
% \DescribeMacro{lastparline}
% De plus, il est indiqué dans la section \og Coupure des mots \fg{}
% que \og la dernière ligne d'un alinéa doit comporter un mot ou
% une fin de mot de longueur au moins égale au double du renfoncement
% de l'alinéa suivant. \fg{} À défaut d'implémenter exactement cette
% solution, l'option \texttt{lastparline} s'assure que la dernière
% ligne d'un alinéa est au moins aussi longue que le double
% de la valeur de |\parindent|.\footnote{\url{http://tex.stackexchange.com/questions/28357/ensure-minimal-length-of-last-line}}
%
% Lorsque \LuaTeX est utilisé, la solution de Patrick Gundlach\footnote{\url{http://tex.stackexchange.com/questions/28357/ensure-minimal-length-of-last-line/28361\#28361}}
% est utilisée. Avec les autres moteurs de rendu, c'est la solution native de
% Enrico Gregorio\footnote{\url{http://tex.stackexchange.com/questions/28357/ensure-minimal-length-of-last-line/28358\#28358}}
% qui fait office d'implémentation:
%
% \begin{verbatim}
%    \usepackage[lastparline]{impnattypo}
% \end{verbatim}
%
% Lorsque l'option \texttt{draft} est activée et que \LuaTeX est utilisé,
% les espaces insécables insérés sont colorés en
% {\color{\impnattypolastparlinecolor}\impnattypolastparlinecolor}.
% La couleur utilisée peut être ajustée par l'option \texttt{lastparlinecolor}.
%
% \DescribeMacro{nosingleletter}
% Il est également recommendé d'éviter les coupures isolant une lettre.
% La solution proposée par Patrick Gundlach\footnote{\url{http://tex.stackexchange.com/questions/27780/one-letter-word-at-the-end-of-line}}
% permet de remédier à cela en utilisant \LuaTeX. Pour activer cette
% fonctionalité, il faut utiliser l'option \texttt{nosingleletter}:
%
% \begin{verbatim}
%    \usepackage[nosingleletter]{impnattypo}
% \end{verbatim}
%
% Lorsque cette option est activée, seul \LuaTeX{} (via la commande |lualatex|)
% pourra effectuer le rendu du document.
%
% Lorsque l'option \texttt{draft} est activée,
% les espaces insécables insérés sont colorés en
% {\color{\impnattyponosinglelettercolor}\impnattyponosinglelettercolor}.
% La couleur utilisée peut être ajustée par l'option \texttt{nosinglelettercolor}.
%
% \DescribeMacro{homeoarchy}
% Lorsque deux lignes consécutives commencent par le même mot
% ou la même série de lettres, cela peut induire le lecteur
% en erreur et cela est donc à éviter.
%
% La correction automatique de ce phénomène est très complexe
% et en général non souhaitable. C'est pourquoi l'option
% \texttt{homeoarchy} de ce paquet se contente
% de les détecter et de les afficher. Leur correction
% consistera en général en l'introduction d'un
% espace insécable dans le paragraphe.
%
% \begin{verbatim}
%    \usepackage[homeoarchy]{impnattypo}
% \end{verbatim}
%
% Cette option n'est effective que si l'option \texttt{draft} est activée.
%
% Les espaces insécables insérés sont colorés de deux couleurs.
% Les mots entiers sont colorés en 
% {\color{\impnattypohomeoarchywordcolor}\impnattypohomeoarchywordcolor}
% et cette couleur peut être ajustée par l'option \texttt{homeoarchywordcolor}.
% Les mots partiels sont colorés en
% {\color{\impnattypohomeoarchycharcolor}\impnattypohomeoarchycharcolor}
% et cette couleur peut être ajustée par l'option \texttt{homeoarchycharcolor}.
%
% Une séquence de glyphes est considéré comme problématique si:
%
% \begin{itemize}
%   \item Le nombre de mots entiers matchant est supérieur à \impnattypohomeoarchymaxwords. Ce paramètre peut être ajusté par l'option \texttt{homeoarchymaxwords};
%   \item Le nombre de caractères matchant est supérieur à \impnattypohomeoarchymaxchars. Ce paramètre peut être ajusté par l'option \texttt{homeoarchymaxchars};
% \end{itemize}
%
%
% \subsection{Numérotation des chapitres}
%
% \DescribeMacro{frenchchapters}
% Concernant la numérotation des chapitres, le lexique indique:
% \og Dans un titre, on compose en chiffres romains grandes capitales
% les numéros de chapitres, à l'exception de l'ordinal \og premier \fg{}
% en toutes lettres malgré la tendance actuelle qui tend à lui substituer
% la forme cardinale Chapitre I. \fg{}
%
% L'option \texttt{frenchchapters} du paquet implémente cette recommendation:
%
% \begin{verbatim}
%    \usepackage[frenchchapters]{impnattypo}
% \end{verbatim}
%
% Si vous souhaitez bénéficier du la forme ordinale \og premier \fg{}
% sans pour autant utiliser une numérotation des chapitres en chiffres romains,
% il est possible de redéfinir la macro \texttt{frenchchapter}, par exemple:
%
% \begin{verbatim}
%    \let\frenchchapter\arabic % numérotation en chiffres arabes
%    \let\frenchchapter\babylonian % numérotation en chiffres babyloniens
% \end{verbatim}
% 
%
% \subsection{Lignes orphelines}
%
% Il est fortement recommendé de ne pas laisser de lignes orphelines
% dans un document. Pour cela, nous vous conseillons d'utiliser le paquet
% |nowidow|:
%
% \begin{verbatim}
%    \usepackage[all]{nowidow}
% \end{verbatim}
%
% Voir la documentation de ce paquet pour plus d'options.
%
%
% \subsection{Mode brouillon}
%
% \DescribeMacro{draft}
% Le paquet \textsf{impnattypo} dispose d'un mode brouillon
% permettant de visualiser les pénalités (espaces insécables)
% ajoutés par les options \texttt{nosingleletter} et 
% \texttt{lastparline}. En mode brouillon,
% les emplacements des espaces insécables insérés
% sont marqués par des rectangles de couleur.
%
% Pour activer le mode brouillon, utilisez l'option \texttt{draft},
% par exemple:
%
% \begin{verbatim}
%    \usepackage[draft,lastparline]{impnattypo}
% \end{verbatim}
%
% Cette document est générée avec l'option \texttt{draft} afin d'en
% montrer les effets.
%
%
% \StopEventually{}
%
% \section{Implémentation}
%
% \iffalse
%<*package>
% \fi
%
%    \begin{macrocode}
\ProvidesPackage{impnattypo}
\RequirePackage{ifluatex}
\RequirePackage{kvoptions}
\SetupKeyvalOptions{
   family=impnattypo,
   prefix=impnattypo,
}
\DeclareBoolOption{draft}
\DeclareBoolOption{frenchchapters}
\DeclareBoolOption{hyphenation}
\DeclareBoolOption{nosingleletter}
\DeclareBoolOption{parindent}
\DeclareBoolOption{lastparline}
\DeclareBoolOption{homeoarchy}
\DeclareStringOption[red]{homeoarchywordcolor}
\DeclareStringOption[orange]{homeoarchycharcolor}
\DeclareStringOption[brown]{nosinglelettercolor}
\DeclareStringOption[teal]{lastparlinecolor}
\DeclareStringOption[1]{homeoarchymaxwords}
\DeclareStringOption[3]{homeoarchymaxchars}
\ProcessKeyvalOptions*
\RequirePackage{xcolor}
\def\usecolor#1{\csname\string\color@#1\endcsname\space}
%    \end{macrocode}
%
% \marginpar{No page finishes with an hyphenated word}
%
%    \begin{macrocode}
\ifimpnattypohyphenation
   \brokenpenalty=10000
%    \end{macrocode}
% \marginpar{Discourage hyphenation on two lines in a row}
%    \begin{macrocode}
   \doublehyphendemerits=1000000000
\fi
%    \end{macrocode}
%
% \marginpar{Number chapters}
%
%    \begin{macrocode}
\ifimpnattypofrenchchapters
   \let\frenchchapter\Roman
   \renewcommand{\thechapter}{%                                                    
     \ifnum\value{chapter}=1
       premier%
     \else
       \frenchchapter{chapter}%
     \fi
   } 
\fi
%    \end{macrocode}
%
% \marginpar{No single letter}
%
%    \begin{macrocode}
\ifimpnattyponosingleletter
   \ifluatex
      \RequirePackage{luatexbase,luacode}
      \begin{luacode}
      
      local prevent_single_letter = function (head)
        while head do
          if head.id == 37 then                                                                          -- glyph
            if (head.char >= 65 and head.char <= 122) or (head.char >= 192 and head.char <= 255) then    -- some kind of letter
               if head.prev.id == 10 and head.next.id == 10 then                                         -- only if we are at a one letter word
   
                 local p = node.new("penalty")
                 p.penalty = 10000
   
                 \ifimpnattypodraft
                    local w = node.new("whatsit","pdf_literal")
                    w.data = "q \usecolor{\impnattyponosinglelettercolor} 0 0 m 0 5 l 2 5 l 2 0 l b Q"
      
                    node.insert_after(head,head,w)
                    node.insert_after(head,w,p)
                 \else
                    node.insert_after(head,head,p)
                 \fi
               end
            end
          end
          head = head.next
        end
        return true
      end
      
      luatexbase.add_to_callback("pre_linebreak_filter",prevent_single_letter,"~")
      \end{luacode}
   \else
      \PackageError{The nosingleletter option only works with LuaTeX}
   \fi
\fi
%    \end{macrocode}
%
% \marginpar{Paragraph indentation}
%
%    \begin{macrocode}
\ifimpnattypoparindent
\setlength{\parindent}{1em}
\fi
%    \end{macrocode}
%
% \marginpar{Last line of paragraph}
%
%    \begin{macrocode}
\ifimpnattypolastparline
   \ifluatex
      \RequirePackage{luatexbase,luacode}
      \begin{luacode}
      last_line_twice_parindent = function (head)
        while head do
          local _w,_h,_d = node.dimensions(head)
          if head.id == 10 and head.subtype ~= 15 and (_w < 2 * tex.parindent) then
      
              -- we are at a glue and have less then 2*\parindent to go
              local p = node.new("penalty")
              p.penalty = 10000

              \ifimpnattypodraft
                 local w = node.new("whatsit","pdf_literal")
                 w.data = "q \usecolor{\impnattypolastparlinecolor} 0 0 m 0 5 l 2 5 l 2 0 l b Q"
   
                 node.insert_after(head,head.prev,w)
                 node.insert_after(head,w,p)
              \else
                 node.insert_after(head,head.prev,p)
              \fi
          end
      
          head = head.next
        end
        return true
      end
      
      luatexbase.add_to_callback("pre_linebreak_filter",last_line_twice_parindent,"lastparline")
      \end{luacode}
   \else
      \setlength{\parfillskip}{0pt plus\dimexpr\textwidth-2\parindent}
   \fi
\fi
%    \end{macrocode}
%
% \marginpar{Detect homeoarchies}
%
%    \begin{macrocode}
\ifimpnattypohomeoarchy
 \ifimpnattypodraft
   \ifluatex
      \RequirePackage{luatexbase,luacode}
      \begin{luacode}
      compare_lines = function (line1,line2)
        local head1 = line1.head
        local head2 = line2.head
     
        local char_count = 0
        local word_count = 0
     
        while head1 and head2 do
           if (head1.id == 37 and head2.id == 37
                  and head1.char == head2.char)          -- identical glyph
              or (head1.id == 10 and head2.id == 10) then  -- glue
        
              if head1.id == 37 then -- glyph
                 char_count = char_count + 1
              elseif head1.id == 10 then -- glue
                 word_count = word_count + 1
              end
              head1 = head1.next
              head2 = head2.next
           elseif (head1.id == 0 or head2.id == 0) then -- end of line
              break
           elseif (head1.id ~= 37 and head1.id ~= 10) then -- some other kind of node
              head1 = head1.next
           elseif (head2.id ~= 37 and head2.id ~= 10) then -- some other kind of node
              head2 = head2.next
           else -- no match, no special node
              break
           end
        end
        -- analyze last non-matching node, check for punctuation
        if ((head1 and head1.id == 37 and head1.char > 49)
             or (head2 and head2.id == 37 and head2.char > 49)) then
           -- not a word
        elseif char_count > 0 then
           word_count = word_count + 1
        end
        return char_count,word_count,head1,head2
      end
     
      homeoarchy = function ( head )
        local cur_line = head
        local prev_line -- initiate prev_head
     
        local max_char = tonumber(\impnattypohomeoarchymaxchars)
        local max_word = tonumber(\impnattypohomeoarchymaxwords)
     
        while head do
          if head.id == 0 then -- new line
            prev_line = cur_line
            cur_line = head
            if prev_line.id == 0 then
               char_count,word_count,prev_head,cur_head = compare_lines(prev_line,cur_line)
               if char_count >= max_char or word_count >= max_word then
                  local w1_prev = node.new("whatsit","pdf_literal")
                  if word_count >= max_word then
                     w1_prev.data = "q \usecolor{\impnattypohomeoarchywordcolor}"
                  else
                     w1_prev.data = "q \usecolor{\impnattypohomeoarchycharcolor}"
                  end
                  w1_prev.mode = 1
     
                  local w2_prev = node.new("whatsit","pdf_literal")
                  w2_prev.data = "Q"
                  w2_prev.mode = 1
     
                  node.insert_after(prev_line.prev,prev_line.prev,w1_prev)
                  node.insert_before(prev_line,prev_head,w2_prev)
     
                  local w1_cur = node.new("whatsit","pdf_literal")
                  w1_cur.data = "q 0 1 1 rg"
                  w1_prev.mode = 1
     
                  local w2_cur = node.new("whatsit","pdf_literal")
                  w2_cur.data = "Q"
                  w2_cur.mode = 1
     
                  --node.insert_after(cur_line.prev,cur_line.prev,w1_cur)
                  --node.insert_before(cur_line,cur_head,w2_cur)
     
               end
            end
          end
          head = head.next
        end
        return true
      end
     
      luatexbase.add_to_callback("post_linebreak_filter",homeoarchy,"homeoarchy")
      \end{luacode}
   \else
      \PackageError{The homeoarchy option only works with LuaTeX}
   \fi
 \fi
\fi
%    \end{macrocode}
%
% \iffalse
%</package>
% \fi
%
% \Finale
\endinput
